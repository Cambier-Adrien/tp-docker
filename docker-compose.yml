services:
  mysql:
    image: mysql:5.7
    container_name: mysql_database
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: products_db
    ports:
      - "3306:3306"
    volumes:
      - ./mysql_data:/var/lib/mysql
      - ./mysql/database.sql:/docker-entrypoint-initdb.d/database.sql
    networks:
      - app-network

  express:
    image: node:18
    container_name: express_backend
    restart: always
    depends_on:
      - mysql
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: products_db
    ports:
      - "5000:5000"
    working_dir: /app
    volumes:
      - ./express:/app
    command: bash -c "npm install && npm start"
    networks:
      - app-network

  angular:
    image: node:18
    container_name: angular_frontend
    restart: always
    ports:
      - "4200:4200"
    working_dir: /app
    volumes:
      - ./angular:/app
    command: bash -c "npm install && npm start -- --host 0.0.0.0 --disable-host-check"
    networks:
      - app-network

  reverse-proxy:
    image: nginx:stable
    container_name: reverse_proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - angular
      - express
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
